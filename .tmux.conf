
#设置前缀为Ctrl + q
set -g prefix C-q
#与此同时，取消默认的前缀按键：
#解除Ctrl+b 与前缀的对应关系
unbind C-b
bind-key C-q send-prefix 

#此类配置可以在命令行模式中输入show-options -g查询 
set-option -g base-index 1
#窗口的初始序号；默认为0，这里设置为1 
set-option -g display-time 5000
#提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set-option -g repeat-time 1000
#控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒
set-option -g status-keys emacs
#操作状态栏时的默认键盘布局；可以设置为vi或emacs 
set-option -g status-right "#(date +%H:%M' ')"
#状态栏右方的内容；这里的设置将得到类似23:59的显示 
set-option -g status-right-length 10
#状态栏右方的内容长度；建议把更多的空间留给状态栏左方（用于列出当前窗口） 
#for 2.2 set-option -g status-utf8 on
#开启状态栏的UTF-8支持 

#此类设置可以在命令行模式中输入show-window-options -g查询 
set-window-option -g mode-keys emacs
#复制模式中的默认键盘布局；可以设置为vi或emacs 
#for 2.2 set-window-option -g utf8 on
#开启窗口的UTF-8支持 

set -g default-terminal "screen-256color"
set -g history-limit 65535
set -g status-right-attr bright
setw -g window-status-current-attr bright
#setw -g window-status-current-bg red
#setw -g window-status-current-fg white

set -g status-interval 1
# Update the status bar every interval seconds.
#set -g visual-activity on
#setw -g monitor-activity on
# Monitor for activity in the window.  Windows with activity are highlighted in the status line.
setw -g automatic-rename off

setw -g xterm-keys on
# If this option is set, tmux will generate xterm(1) -style function key sequences; 
#these have a number included to indicate modifiers such as Shift, Alt or Ctrl.  The default is off.

set -g bell-action any
# listen for activity on all windows

set -g set-titles on
# enable wm window titles
set -g set-titles-string "tmux.#I.#W"
# wm window title string (uses statusbar variables)

# Set the mouse behaviour
set -g mouse on #for 2.2
#for 2.2 set-window-option -g mode-mouse on
#for 2.2 set-window-option -g mouse-resize-pane on
#for 2.2 set-window-option -g mouse-select-pane on
#for 2.2 set-window-option -g mouse-select-window on

#使当前pane 最大化
# zoom pane <-> window 
#http://tmux.svn.sourceforge.net/viewvc/tmux/trunk/examples/tmux-zoom.sh
bind ^z run "tmux-zoom"

#!/bin/bash

#tmux-zoom.sh
# Copyright (c) 2012 Juan Ignacio Pumarino, jipumarino@gmail.com
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Instructions
# ------------
#
# 1. Install this script and give it execute permission somewhere in your PATH.
#    For example:
#
#    $ mkdir -p ~/bin
#    $ wget https://raw.github.com/jipumarino/tmux-zoom/master/tmux-zoom.sh -O ~/bin/tmux-zoom.sh
#    $ chmod +x ~/bin/tmux-zoom.sh
# 
# 2. Add a shortcut in your ~/.tmux.conf file:
#
#    bind C-k run "tmux-zoom.sh"
#
# 3. When using this shortcut, the current tmux pane will open in a new window by itself.
#    Running it again in the zoomed window will return it to its original pane. You can have
#    as many zoomed windows as you want.

#current=$(tmux display-message -p '#W-#I-#P')
#list=$(tmux list-window)
#
#[[ "$current" =~ ^(.*)-([0-9]+)-([0-9]+) ]]
#current_window=${BASH_REMATCH[1]}
#current_pane=${BASH_REMATCH[2]}-${BASH_REMATCH[3]}
#new_zoom_window=ZOOM-$current_pane
#
#if [[ $current_window =~ ZOOM-([0-9]+)-([0-9+]) ]]; then
#  old_zoom_window=ZOOM-${BASH_REMATCH[1]}-${BASH_REMATCH[2]}
#  tmux select-window -t ${BASH_REMATCH[1]} \; select-pane -t ${BASH_REMATCH[2]} \; swap-pane -s $old_zoom_window.1 \; kill-window -t $old_zoom_window
#elif [[ $list =~ $new_zoom_window ]]; then
#  tmux select-window -t $new_zoom_window
#else
#  tmux new-window -d -n $new_zoom_window \; swap-pane -s $new_zoom_window.1 \; select-window -t $new_zoom_window
#fi





#tmux ls #显示已有tmux列表（C-b s）
#tmux attach-session -t 数字 #选择tmux

#常用按键
#这里需要说明一点的是，tmux的任何指令，都包含一个前缀，也就是说，你按了前缀(一组按键，默认是Ctrl+b)以后，系统才知道你接下来的指令是发送给tmux的。
#?	C-q ? 显示快捷键帮助
#?	C-q C-o 调换窗口位置，类似与vim 里的C-w
#?	C-q 空格键 采用下一个内置布局
#?	C-q ! 把当前窗口变为新窗口
#?	C-q " 模向分隔窗口
#?	C-q % 纵向分隔窗口
#?	C-q q 显示分隔窗口的编号
#?	C-q o 跳到下一个分隔窗口
#?	C-q 上下键 上一个及下一个分隔窗口
#?	C-q C-方向键 调整分隔窗口大小
#?	C-q c 创建新窗口
#?	C-q 0~9 选择几号窗口
#?	C-q c 创建新窗口
#?	C-q n 选择下一个窗口
#?	C-q l 切换到最后使用的窗口
#?	C-q p 选择前一个窗口
#?	C-q w 以菜单方式显示及选择窗口
#?	C-q t 显示时钟
#?	C-q ; 切换到最后一个使用的面板
#?  C-q , rename window
#?	C-q x 关闭面板
#?	C-q & 关闭窗口
#?	C-q s 以菜单方式显示和选择会话
#?	C-q d 退出tumx，并保存当前会话，这时，tmux仍在后台运行，可以通过tmux attach进入到指定的会话
#会话
#?	C-q s 以菜单的方式查看并选择会话
#?	C-q :new-session 新建一个会话
#?	C-q d 退出并保存会话
#?	终端运行 tmux attach 返回会话
#命名会话
#tmux new -s session  
#tmux new -s session -d #在后台建立会话 
#tmux ls #列出会话 
#tmux attach -t session #进入某个会话 
#
